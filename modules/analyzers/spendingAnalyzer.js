class SpendingAnalyzer{static analyze(t){let e={totalSpent:0,totalCumulusRabatt:0,totalRegularRabatt:0,monthlySpending:{},daySpending:{},singlePurchaseItems:new Map,mostExpensiveMonth:"",highestMonthlySpending:0};t.forEach(t=>{this.processTransaction(t,e)});let s=this.processTripStatistics(t,e.totalSpent);return{...e,...s}}static processTransaction(t,e){let s=parseFloat(t.Umsatz),n=parseFloat(t.Aktion);!isNaN(s)&&(t.Artikel.includes("CUMULUS BON")?e.totalCumulusRabatt+=s:s>0&&(e.totalSpent+=s,this.updateDaySpending(t,s,e),this.updateSinglePurchases(t,s,e),this.updateMonthlySpending(t,s,e))),!isNaN(n)&&n>0&&(e.totalRegularRabatt+=n)}static updateDaySpending(t,e,s){let n=new Date(t.Datum.split(".").reverse().join("-")),i=n.toLocaleDateString("de-DE",{weekday:"long"}),a=`${t.Datum}-${t.Zeit}-${t.Filiale}-${t.Transaktionsnummer}`;s.daySpending[i]||(s.daySpending[i]={total:0,visits:0}),s.daySpending[i].total+=e,s._processedVisits||(s._processedVisits=new Set),s._processedVisits.has(a)||(s.daySpending[i].visits++,s._processedVisits.add(a))}static updateSinglePurchases(t,e,s){let n=t.Artikel;if(s.singlePurchaseItems.has(n)){let i=s.singlePurchaseItems.get(n);i.count+=1}else s.singlePurchaseItems.set(n,{count:1,price:e,item:t})}static updateMonthlySpending(t,e,s){let[n,i,a]=t.Datum.split("."),l=`${a}-${i}`;s.monthlySpending[l]=(s.monthlySpending[l]||0)+e,s.monthlySpending[l]>s.highestMonthlySpending&&(s.mostExpensiveMonth=l,s.highestMonthlySpending=s.monthlySpending[l])}static processTripStatistics(t,e){let s=new Map;t.forEach(t=>{let e=`${t.Datum}-${t.Zeit}-${t.Filiale}-${t.Transaktionsnummer}`;s.has(e)||s.set(e,{total:0,date:t.Datum,items:[]});let n=parseFloat(t.Umsatz);if(!isNaN(n)){let i=s.get(e);i.total+=n,n>0&&i.items.push(t)}});let n=Array.from(s.values()).filter(t=>t.total>0&&t.items.length>0).sort((t,e)=>t.total-e.total);return{cheapestTrip:n[0],mostExpensiveTrip:n[n.length-1],avgSpentPerVisit:e/n.length}}}window.SpendingAnalyzer=SpendingAnalyzer;
