class SlideAnimator{constructor(e){this.slideContent=e}animate(e,t){this.slideContent.classList.add(`sliding-${e}`),setTimeout(()=>{t(),this.slideContent.classList.remove(`sliding-${e}`),this.slideContent.classList.add(`slide-enter-${"left"===e?"right":"left"}`),setTimeout(()=>{this.slideContent.classList.remove(`slide-enter-${"left"===e?"right":"left"}`)},CONFIG.ANIMATION_DURATION)},CONFIG.ANIMATION_DURATION)}}class EventHandler{constructor(e){this.app=e,this.slideAnimator=null,this.hammer=null,this.boundHandleKeydown=this.handleKeydown.bind(this),this.initializeEventListeners()}initializeEventListeners(){try{this.setupDemoButton(),this.setupGestureHandling(),this.setupPauseButton(),this.setupFileUploads(),this.setupKeyboardNavigation()}catch(e){console.error("Failed to initialize event listeners:",e)}}cleanup(){this.hammer&&this.hammer.destroy(),document.removeEventListener("keydown",this.boundHandleKeydown)}setupDemoButton(){let e=document.getElementById("startButton");if(!e)throw Error("Start button element not found");e.addEventListener("click",()=>{if(!window.SAMPLE_DATA){console.error("Sample data not found");return}this.app.processCsvData(window.SAMPLE_DATA)})}setupGestureHandling(){let e=document.getElementById("slide-container"),t=document.getElementById("slide-content");if(!e||!t)throw Error("Slide container or content elements not found");this.slideAnimator=new SlideAnimator(t),this.setupClickHandling(e),this.setupSwipeHandling(e)}setupClickHandling(e){e.addEventListener("click",t=>{if(t.target.closest("#pauseButton")){t.preventDefault(),t.stopPropagation();return}let i=e.getBoundingClientRect(),s=t.clientX-i.left,n=i.width;s<n*CONFIG.CLICK_ZONES.LEFT?this.app.previousSlide():s>n*CONFIG.CLICK_ZONES.RIGHT&&this.app.nextSlide()})}setupSwipeHandling(e){this.hammer=new Hammer(e),this.hammer.get("swipe").set({direction:Hammer.DIRECTION_HORIZONTAL}),this.hammer.get("tap").set({enable:!1}),this.hammer.on("swipeleft",()=>{this.slideAnimator.animate("left",()=>this.app.nextSlide())}),this.hammer.on("swiperight",()=>{this.slideAnimator.animate("right",()=>this.app.previousSlide())})}setupPauseButton(){let e=document.getElementById("pauseButton");if(!e)throw Error("Pause button element not found");e.addEventListener("click",e=>{e.stopPropagation(),this.app.togglePause(),this.updatePauseIcon()})}updatePauseIcon(){this.app.pauseIcon&&(this.app.pauseIcon.setAttribute("data-lucide",this.app.isPaused?"play":"pause"),lucide.createIcons())}setupFileUploads(){["csvFile","presentationCsvFile"].forEach(e=>{let t=document.getElementById(e);if(!t){console.warn(`File input ${e} not found`);return}t.addEventListener("change",this.handleFileUpload.bind(this))})}async handleFileUpload(e){let t=e.target.files[0];if(t){if(!CONFIG.ACCEPTED_FILE_TYPES.includes(t.type)){console.error("Invalid file type. Please upload a CSV file.");return}try{let i=await this.readFileAsync(t);await this.processFileData(i)}catch(s){console.error("Error processing file:",s)}}}readFileAsync(e){return new Promise((t,i)=>{let s=new FileReader;s.onload=e=>t(e.target.result),s.onerror=()=>i(Error("Error reading file")),s.readAsText(e)})}async processFileData(e){await new Promise(e=>setTimeout(e,0)),this.app.processCsvData(e)}setupKeyboardNavigation(){document.addEventListener("keydown",this.boundHandleKeydown)}handleKeydown(e){switch(e.code){case"Space":this.app.togglePause(),this.updatePauseIcon();break;case"ArrowLeft":this.app.previousSlide();break;case"ArrowRight":this.app.nextSlide()}}}window.EventHandler=EventHandler;
